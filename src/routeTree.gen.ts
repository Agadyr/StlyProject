/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ComparisonImport } from './routes/_comparison'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const ComparisonComparisonIdTypeLazyImport = createFileRoute(
  '/_comparison/$comparisonId/type',
)()
const ComparisonComparisonIdSetupLazyImport = createFileRoute(
  '/_comparison/$comparisonId/setup',
)()
const ComparisonComparisonIdResultsLazyImport = createFileRoute(
  '/_comparison/$comparisonId/results',
)()
const ComparisonComparisonIdReceiveResultsLazyImport = createFileRoute(
  '/_comparison/$comparisonId/receive-results',
)()
const ComparisonComparisonIdConclusionLazyImport = createFileRoute(
  '/_comparison/$comparisonId/conclusion',
)()

// Create/Update Routes

const ComparisonRoute = ComparisonImport.update({
  id: '/_comparison',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ComparisonComparisonIdTypeLazyRoute =
  ComparisonComparisonIdTypeLazyImport.update({
    path: '/$comparisonId/type',
    getParentRoute: () => ComparisonRoute,
  } as any).lazy(() =>
    import('./routes/_comparison/$comparisonId.type.lazy').then((d) => d.Route),
  )

const ComparisonComparisonIdSetupLazyRoute =
  ComparisonComparisonIdSetupLazyImport.update({
    path: '/$comparisonId/setup',
    getParentRoute: () => ComparisonRoute,
  } as any).lazy(() =>
    import('./routes/_comparison/$comparisonId.setup.lazy').then(
      (d) => d.Route,
    ),
  )

const ComparisonComparisonIdResultsLazyRoute =
  ComparisonComparisonIdResultsLazyImport.update({
    path: '/$comparisonId/results',
    getParentRoute: () => ComparisonRoute,
  } as any).lazy(() =>
    import('./routes/_comparison/$comparisonId.results.lazy').then(
      (d) => d.Route,
    ),
  )

const ComparisonComparisonIdReceiveResultsLazyRoute =
  ComparisonComparisonIdReceiveResultsLazyImport.update({
    path: '/$comparisonId/receive-results',
    getParentRoute: () => ComparisonRoute,
  } as any).lazy(() =>
    import('./routes/_comparison/$comparisonId.receive-results.lazy').then(
      (d) => d.Route,
    ),
  )

const ComparisonComparisonIdConclusionLazyRoute =
  ComparisonComparisonIdConclusionLazyImport.update({
    path: '/$comparisonId/conclusion',
    getParentRoute: () => ComparisonRoute,
  } as any).lazy(() =>
    import('./routes/_comparison/$comparisonId.conclusion.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_comparison': {
      preLoaderRoute: typeof ComparisonImport
      parentRoute: typeof rootRoute
    }
    '/_comparison/$comparisonId/conclusion': {
      preLoaderRoute: typeof ComparisonComparisonIdConclusionLazyImport
      parentRoute: typeof ComparisonImport
    }
    '/_comparison/$comparisonId/receive-results': {
      preLoaderRoute: typeof ComparisonComparisonIdReceiveResultsLazyImport
      parentRoute: typeof ComparisonImport
    }
    '/_comparison/$comparisonId/results': {
      preLoaderRoute: typeof ComparisonComparisonIdResultsLazyImport
      parentRoute: typeof ComparisonImport
    }
    '/_comparison/$comparisonId/setup': {
      preLoaderRoute: typeof ComparisonComparisonIdSetupLazyImport
      parentRoute: typeof ComparisonImport
    }
    '/_comparison/$comparisonId/type': {
      preLoaderRoute: typeof ComparisonComparisonIdTypeLazyImport
      parentRoute: typeof ComparisonImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ComparisonRoute.addChildren([
    ComparisonComparisonIdConclusionLazyRoute,
    ComparisonComparisonIdReceiveResultsLazyRoute,
    ComparisonComparisonIdResultsLazyRoute,
    ComparisonComparisonIdSetupLazyRoute,
    ComparisonComparisonIdTypeLazyRoute,
  ]),
])

/* prettier-ignore-end */
